version: '3'
services:
  awslocalstack:
    image: localstack/localstack
    hostname: localstack
    networks:
      - localstack-net
    ports:
      - "4566:4566"
    environment:
      - SERVICES=sns
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=${TMPDIR}
      - DEFAULT_REGION=${AWS_DEFAULT_REGION}
    volumes:
      - ./data:/tmp/localstack
      - /var/run/docker.sock:/var/run/docker.sock
      - ./awslocalstack:/docker-entrypoint-initaws.d
  zookeeper:
      image: wurstmeister/zookeeper:latest
      networks:
        - localstack-net
      ports:
        - "2181:2181"
  kafka:
      image: wurstmeister/kafka:latest
      hostname: kafka
      networks:
        - localstack-net
      ports:
        - "9092:9092"
        - "9094:9094"
      environment:
        OUTSIDE_HOSTNAME: ${OUTSIDE_HOSTNAME:-localhost}
        KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://${OUTSIDE_HOSTNAME:-localhost}:9094
        KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
        KAFKA_CREATE_TOPICS: "${KAFKA_TOPIC}:1:1"
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      depends_on:
        - "zookeeper"
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
  kafkaproducer:
    image: kafkaproducerservice
    networks:
      - localstack-net
    build:
      context: ../
      dockerfile: ./docker/kafkaproducer/Dockerfile
    environment:
      - PRODUCER_BOOTSTRAP_SERVERS=${PRODUCER_BOOTSTRAP_SERVERS}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - AWS_ENDPOINT_URL=${AWS_ENDPOINT_URL}
      - EVENT_COUNT=${EVENT_COUNT}
    depends_on:
      - "kafka"
      - "awslocalstack"
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
  kafkaconsumer:
    image: ${DOCKER_REGISTRY}/kafkaconsumerservice:${IMAGE_TAG}
    networks:
      - localstack-net
    build:
      context: ../
      dockerfile: ./docker/kafkaconsumer/Dockerfile
    environment:
      - BOOTSTRAP_SERVERS=${BOOTSTRAP_SERVERS}
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - EVENT_TOPIC=${EVENT_TOPIC}
      - QUEUE_URL=${QUEUE_URL}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_ENDPOINT_URL=${AWS_ENDPOINT_URL}
      - LOCAL_STACK=${LOCAL_STACK}
    volumes:
      - /Users/$USER/.aws/:/root/.aws:ro
networks:
  localstack-net:
    external: false
    driver: bridge
    name: localstack-net
